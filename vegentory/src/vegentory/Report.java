/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vegentory;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.*;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.plaf.nimbus.NimbusLookAndFeel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * 
 */
public class Report extends javax.swing.JFrame {
    
    private String lastKualitas;
    private String t0;
    private String t1;

    /**
     * Creates new form Report
     */
    public Report() {
        
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
        //TabPane Name
        jTabbedPane1.setTitleAt(0, "Trend");
        jTabbedPane1.setTitleAt(1, "Kuantitas");
        jTabbedPane1.setTitleAt(2, "Kualitas");
        
        //Disable Analisis Button
        this.analisisButton.setEnabled(false);
        
        //Combobox Sayuran
        masukanData("SELECT nama_sayur from sayuran;","nama_sayur", boxSayuran);
        masukanData("SELECT nama_sayur from sayuran;","nama_sayur", boxSayuran2);
        masukanData("SELECT nama_sayur from sayuran;","nama_sayur", boxSayuran3);
        //Combobox Kelurahan
        masukanData("SELECT nama_kelurahan from warga_kelurahan;","nama_kelurahan", boxKelurahan);
        
                
        
//        try {
//            UIManager.setLookAndFeel(new NimbusLookAndFeel());
//            UIManager.put("control", new Color(128, 128, 128));
//            UIManager.put("info", new Color(128, 128, 128));
//            UIManager.put("nimbusBase", new Color(18, 30, 49));
//            UIManager.put("nimbusAlertYellow", new Color(248, 187, 0));
//            UIManager.put("nimbusDisabledText", new Color(128, 128, 128));
//            UIManager.put("nimbusFocus", new Color(115, 164, 209));
//            UIManager.put("nimbusGreen", new Color(176, 179, 50));
//            UIManager.put("nimbusInfoBlue", new Color(66, 139, 221));
//            UIManager.put("nimbusLightBackground", new Color(18, 30, 49));
//            UIManager.put("nimbusOrange", new Color(191, 98, 4));
//            UIManager.put("nimbusRed", new Color(169, 46, 34));
//            UIManager.put("nimbusSelectedText", new Color(255, 255, 255));
//            UIManager.put("nimbusSelectionBackground", new Color(104, 93, 156));
//            UIManager.put("text", new Color(230, 230, 230));
//            SwingUtilities.updateComponentTreeUI(this);
//        } catch (UnsupportedLookAndFeelException exc) {
//            System.err.println("Nimbus: Unsupported Look and feel!");
//        }
    }
    
    
    private void masukanData(String query, String nama_kolom, JComboBox box) {
        String connectionUrl
                = "jdbc:sqlserver://" + SQLTaker.instanceName
                + "database=" + SQLTaker.dbName
                + "user=" + SQLTaker.id
                + "password=" + SQLTaker.pass
                + "encrypt=false;"
                + "trustServerCertificate=false;"
                + "loginTimeout=10;";

            ResultSet rs = null;

            try (Connection connection = DriverManager.getConnection(connectionUrl);
                    Statement statement = connection.createStatement();) {

                // Create and execute a SELECT SQL statement.
                String selectSql = query;
                rs = statement.executeQuery(selectSql);
    //             Print results from select statement
    
                box.removeAllItems();
                
                ArrayList<String> temp = new ArrayList<String>();
                temp.add("None");
    
                while(rs.next()){
                    temp.add(rs.getString(nama_kolom));
                }
                
                for (int i = 0; i < temp.size(); i++) {
                    box.addItem(temp.get(i));
                }
            }
            catch (SQLException e) {
                e.printStackTrace();
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        TrendAnalysis = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jenisAnalisis = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        d0 = new javax.swing.JComboBox<>();
        m0 = new javax.swing.JComboBox<>();
        y0 = new javax.swing.JComboBox<>();
        d1 = new javax.swing.JComboBox<>();
        m1 = new javax.swing.JComboBox<>();
        y1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        boxSayuran = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        boxKelurahan = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        TrendAnalysis2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jenisAnalisis2 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        boxSayuran2 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        TrendAnalysis3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        boxSayuran3 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        result2 = new javax.swing.JLabel();
        d4 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        y4 = new javax.swing.JComboBox<>();
        d5 = new javax.swing.JComboBox<>();
        m4 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        y5 = new javax.swing.JComboBox<>();
        m5 = new javax.swing.JComboBox<>();
        result = new javax.swing.JLabel();
        analisisButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        TrendAnalysis.setBackground(new java.awt.Color(24, 140, 84));
        TrendAnalysis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel2.setFont(new java.awt.Font("Doppio One", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Jenis Analisis ");

        jenisAnalisis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Panen", "Penjualan", "Pengiriman", "Konsumsi" }));
        jenisAnalisis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jenisAnalisisActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Doppio One", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Rentang Tanggal");

        d0.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        m0.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        m0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m0ActionPerformed(evt);
            }
        });

        y0.setMaximumRowCount(100);
        y0.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023" }));
        y0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y0ActionPerformed(evt);
            }
        });

        d1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        d1.setSelectedIndex(30);

        m1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        m1.setSelectedIndex(11);
        m1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m1ActionPerformed(evt);
            }
        });

        y1.setMaximumRowCount(100);
        y1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023" }));
        y1.setSelectedIndex(3);
        y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ebrima", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Sampai");

        jLabel5.setFont(new java.awt.Font("Doppio One", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Jenis Sayuran ");

        boxSayuran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        boxSayuran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxSayuranActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Doppio One", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Kelurahan ");

        boxKelurahan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        boxKelurahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxKelurahanActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Mulai");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TrendAnalysisLayout = new javax.swing.GroupLayout(TrendAnalysis);
        TrendAnalysis.setLayout(TrendAnalysisLayout);
        TrendAnalysisLayout.setHorizontalGroup(
            TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrendAnalysisLayout.createSequentialGroup()
                .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TrendAnalysisLayout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TrendAnalysisLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)))
                .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boxKelurahan, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TrendAnalysisLayout.createSequentialGroup()
                        .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(d0, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TrendAnalysisLayout.createSequentialGroup()
                                .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(m0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(m1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(57, 57, 57)
                                .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(y1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(y0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(boxSayuran, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jenisAnalisis, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(289, Short.MAX_VALUE))
        );
        TrendAnalysisLayout.setVerticalGroup(
            TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrendAnalysisLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(boxSayuran, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(boxKelurahan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jenisAnalisis, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(y0, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(m0)
                    .addComponent(d0))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(TrendAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(d1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(m1)
                    .addComponent(y1))
                .addGap(46, 46, 46)
                .addComponent(jButton1)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Trend", TrendAnalysis);

        TrendAnalysis2.setBackground(new java.awt.Color(24, 140, 84));
        TrendAnalysis2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel12.setFont(new java.awt.Font("Doppio One", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Jenis Analisis :");

        jenisAnalisis2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Panen", "Penjualan", "Pengiriman", "Konsumsi" }));
        jenisAnalisis2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jenisAnalisis2ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Doppio One", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Jenis Sayuran :");

        boxSayuran2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        boxSayuran2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxSayuran2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("Mulai");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TrendAnalysis2Layout = new javax.swing.GroupLayout(TrendAnalysis2);
        TrendAnalysis2.setLayout(TrendAnalysis2Layout);
        TrendAnalysis2Layout.setHorizontalGroup(
            TrendAnalysis2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrendAnalysis2Layout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addGroup(TrendAnalysis2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TrendAnalysis2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boxSayuran2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jenisAnalisis2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(400, 400, 400))
            .addGroup(TrendAnalysis2Layout.createSequentialGroup()
                .addGap(426, 426, 426)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TrendAnalysis2Layout.setVerticalGroup(
            TrendAnalysis2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrendAnalysis2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(TrendAnalysis2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(TrendAnalysis2Layout.createSequentialGroup()
                        .addGroup(TrendAnalysis2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jenisAnalisis2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(67, 67, 67)
                        .addComponent(boxSayuran2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15))
                .addGap(63, 63, 63)
                .addComponent(jButton3)
                .addContainerGap(275, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Kuantitas", TrendAnalysis2);

        TrendAnalysis3.setBackground(new java.awt.Color(24, 140, 84));
        TrendAnalysis3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel16.setFont(new java.awt.Font("Doppio One", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Jenis Sayuran :");

        boxSayuran3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        boxSayuran3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxSayuran3ActionPerformed(evt);
            }
        });

        jButton4.setText("Mulai");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        result2.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        result2.setForeground(new java.awt.Color(255, 255, 255));
        result2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        result2.setText("Persentase Kesegaran :");

        d4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        d4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d4ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Doppio One", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Rentang Tanggal :");

        y4.setMaximumRowCount(100);
        y4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023" }));
        y4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y4ActionPerformed(evt);
            }
        });

        d5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        d5.setSelectedIndex(30);

        m4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        m4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m4ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Sampai");

        y5.setMaximumRowCount(100);
        y5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023" }));
        y5.setSelectedIndex(3);
        y5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y5ActionPerformed(evt);
            }
        });

        m5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        m5.setSelectedIndex(11);
        m5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m5ActionPerformed(evt);
            }
        });

        result.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        result.setForeground(new java.awt.Color(255, 255, 255));
        result.setText("-");

        analisisButton.setText("Analisis");
        analisisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analisisButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TrendAnalysis3Layout = new javax.swing.GroupLayout(TrendAnalysis3);
        TrendAnalysis3.setLayout(TrendAnalysis3Layout);
        TrendAnalysis3Layout.setHorizontalGroup(
            TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrendAnalysis3Layout.createSequentialGroup()
                .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TrendAnalysis3Layout.createSequentialGroup()
                        .addGap(298, 298, 298)
                        .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TrendAnalysis3Layout.createSequentialGroup()
                                .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(d4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(d5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(m4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(m5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(y4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(y5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(boxSayuran3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(TrendAnalysis3Layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TrendAnalysis3Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TrendAnalysis3Layout.createSequentialGroup()
                                .addComponent(result2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(analisisButton)))))
                .addContainerGap(334, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TrendAnalysis3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(398, 398, 398))
        );
        TrendAnalysis3Layout.setVerticalGroup(
            TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrendAnalysis3Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxSayuran3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(45, 45, 45)
                .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(33, 33, 33)
                .addComponent(jLabel14)
                .addGap(35, 35, 35)
                .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(TrendAnalysis3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(analisisButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Kualitas", TrendAnalysis3);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 48)); // NOI18N
        jLabel1.setText("Analisis");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vegentory/logo4.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Tab");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jenisAnalisisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jenisAnalisisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jenisAnalisisActionPerformed

    private void y0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y0ActionPerformed
        String[] temp = {"1", "3", "5", "7", "8", "10", "12"};
        if (m0.getSelectedItem().toString() == "2") {
            if (Integer.parseInt(y0.getSelectedItem().toString())%4 == 0) {
                d0.removeAllItems();
                for (int i = 0; i < 29; i++) {
                    d0.addItem(Integer.toString(i+1));
                }
            } else {
                d0.removeAllItems();
                for (int i = 0; i < 28; i++) {
                    d0.addItem(Integer.toString(i+1));
                }
            }
        } else if (Arrays.asList(temp).contains(m0.getSelectedItem().toString())) {
            d0.removeAllItems();
            for (int i = 0; i < 31; i++) {
                d0.addItem(Integer.toString(i+1));
            }
        } else {
            d0.removeAllItems();
            for (int i = 0; i < 30; i++) {
                d0.addItem(Integer.toString(i+1));
            }
        }
    }//GEN-LAST:event_y0ActionPerformed

    private void y1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y1ActionPerformed
        String[] temp = {"1", "3", "5", "7", "8", "10", "12"};
        if (m1.getSelectedItem().toString() == "2") {
            if (Integer.parseInt(y1.getSelectedItem().toString())%4 == 0) {
                d1.removeAllItems();
                for (int i = 0; i < 29; i++) {
                    d1.addItem(Integer.toString(i+1));
                }
            } else {
                d1.removeAllItems();
                for (int i = 0; i < 28; i++) {
                    d1.addItem(Integer.toString(i+1));
                }
            }
        } else if (Arrays.asList(temp).contains(m1.getSelectedItem().toString())) {
            d1.removeAllItems();
            for (int i = 0; i < 31; i++) {
                d1.addItem(Integer.toString(i+1));
            }
        } else {
            d1.removeAllItems();
            for (int i = 0; i < 30; i++) {
                d1.addItem(Integer.toString(i+1));
            }
        }
    }//GEN-LAST:event_y1ActionPerformed

    private void boxSayuranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxSayuranActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxSayuranActionPerformed

    private void boxKelurahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxKelurahanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxKelurahanActionPerformed

    private void m1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m1ActionPerformed
        String[] temp = {"1", "3", "5", "7", "8", "10", "12"};
        if (m1.getSelectedItem().toString() == "2") {
            if (Integer.parseInt(y1.getSelectedItem().toString())%4 == 0) {
                d1.removeAllItems();
                for (int i = 0; i < 29; i++) {
                    d1.addItem(Integer.toString(i+1));
                }
            } else {
                d1.removeAllItems();
                for (int i = 0; i < 28; i++) {
                    d1.addItem(Integer.toString(i+1));
                }
            }
        } else if (Arrays.asList(temp).contains(m1.getSelectedItem().toString())) {
            d1.removeAllItems();
            for (int i = 0; i < 31; i++) {
                d1.addItem(Integer.toString(i+1));
            }
        } else {
            d1.removeAllItems();
            for (int i = 0; i < 30; i++) {
                d1.addItem(Integer.toString(i+1));
            }
        }
    }//GEN-LAST:event_m1ActionPerformed

    
    private void m0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m0ActionPerformed
        String[] temp = {"1", "3", "5", "7", "8", "10", "12"};
        if (m0.getSelectedItem().toString() == "2") {
            if (Integer.parseInt(y0.getSelectedItem().toString())%4 == 0) {
                d0.removeAllItems();
                for (int i = 0; i < 29; i++) {
                    d0.addItem(Integer.toString(i+1));
                }
            } else {
                d0.removeAllItems();
                for (int i = 0; i < 28; i++) {
                    d0.addItem(Integer.toString(i+1));
                }
            }
        } else if (Arrays.asList(temp).contains(m0.getSelectedItem().toString())) {
            d0.removeAllItems();
            for (int i = 0; i < 31; i++) {
                d0.addItem(Integer.toString(i+1));
            }
        } else {
            d0.removeAllItems();
            for (int i = 0; i < 30; i++) {
                d0.addItem(Integer.toString(i+1));
            }
        }
    }//GEN-LAST:event_m0ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String connectionUrl
                = "jdbc:sqlserver://" + SQLTaker.instanceName
                + "database=" + SQLTaker.dbName
                + "user=" + SQLTaker.id
                + "password=" + SQLTaker.pass
                + "encrypt=false;"
                + "trustServerCertificate=false;"
                + "loginTimeout=10;";


        ResultSet rs = null;

        try (Connection connection = DriverManager.getConnection(connectionUrl);
                Statement statement = connection.createStatement();) {

            // Create and execute a SELECT SQL statement.
            if (jTabbedPane1.getTitleAt(jTabbedPane1.getSelectedIndex()).equals("Trend")) {
                //Judul Graph
                String judul = "Analisis ";
                //Unite Tanggal
                String tanggal0 = y0.getSelectedItem().toString() + "-" + m0.getSelectedItem().toString() + "-" + d0.getSelectedItem().toString();
                String tanggal1 = y1.getSelectedItem().toString() + "-" + m1.getSelectedItem().toString() + "-" + d0.getSelectedItem().toString();

                String selectSql = "";
                if (jenisAnalisis.getSelectedItem().toString() == "Panen") {
                    selectSql += "SELECT SUM(kuantitas_produksi) AS \"kuantitas_produksi\", tanggal_panen FROM menghasilkan " +
                        "JOIN pemasok ON menghasilkan.id_pemasok = pemasok.id_pemasok WHERE "
                            +"tanggal_panen BETWEEN '"+ tanggal0 +"' AND '"+ tanggal1 + "' ";

                    judul += "Panen";
                } else if (jenisAnalisis.getSelectedItem().toString() == "Penjualan") {
                    selectSql += "SELECT SUM(kuantitas_penjualan) AS \"kuantitas_penjualan\", tanggal_transaksi FROM menjual " +
                        "JOIN distributor ON menjual.id_distributor = distributor.id_distributor WHERE " 
                            +"tanggal_transaksi BETWEEN '"+ tanggal0 +"' AND '"+ tanggal1 + "' ";

                    judul += "Penjualan";
                } else if (jenisAnalisis.getSelectedItem().toString() == "Konsumsi") {
                    selectSql += "SELECT SUM(kuantitas_dikonsumsi) AS \"kuantitas_dikonsumsi\", tanggal_konsumsi FROM mengkonsumsi " +
                        "JOIN warga_kelurahan ON mengkonsumsi.kode_wilayah = warga_kelurahan.kode_wilayah WHERE " 
                            +"tanggal_konsumsi BETWEEN '"+ tanggal0 +"' AND '"+ tanggal1 + "' ";

                    judul += "Konsumsi";
                } else if (jenisAnalisis.getSelectedItem().toString() == "Pengiriman") {
                    selectSql += "SELECT SUM(kuantitas_pengiriman) AS \"kuantitas_pengiriman\", tanggal_pengiriman FROM mengirim " +
                        "JOIN distributor ON mengirim.id_distributor = distributor.id_distributor WHERE " 
                            +"tanggal_pengiriman BETWEEN '"+ tanggal0 +"' AND '"+ tanggal1 + "' ";

                    judul += "Pengiriman";
                }


                // if else QUERY
                if (boxSayuran.getSelectedItem().toString() != "None") {
                    if (jenisAnalisis.getSelectedItem().toString() != "Pengiriman")
                        selectSql += "AND nama_sayur = '"+ boxSayuran.getSelectedItem().toString() + "' ";
                    else
                        selectSql += "AND nama_barang = '"+ boxSayuran.getSelectedItem().toString() + "' ";
                    
                    judul += " " + boxSayuran.getSelectedItem().toString();
                }
                if (boxKelurahan.getSelectedItem().toString() != "None") {
                    if (jenisAnalisis.getSelectedItem().toString() != "Konsumsi")
                        selectSql += "AND kelurahan = '"+ boxKelurahan.getSelectedItem().toString() + "' ";
                    else
                        selectSql += "AND nama_kelurahan = '"+ boxKelurahan.getSelectedItem().toString() + "' ";
                    
                    judul += " di " + boxKelurahan.getSelectedItem().toString();
                }


                if (jenisAnalisis.getSelectedItem().toString() == "Panen") {
                    selectSql += "GROUP BY tanggal_panen;";
                } else if (jenisAnalisis.getSelectedItem().toString() == "Penjualan") {
                    selectSql += "GROUP BY tanggal_transaksi;";
                } else if (jenisAnalisis.getSelectedItem().toString() == "Konsumsi") {
                    selectSql += "GROUP BY tanggal_konsumsi;";
                } else if (jenisAnalisis.getSelectedItem().toString() == "Pengiriman") {
                    selectSql += "GROUP BY tanggal_pengiriman;";
                }



                rs = statement.executeQuery(selectSql);
    //             Print results from select statement
                ArrayList<Double> ys = new ArrayList<>();
                ArrayList<String> xs = new ArrayList<>();
                while(rs.next()){
                    if (jenisAnalisis.getSelectedItem().toString() == "Panen") {
                        ys.add(rs.getDouble("kuantitas_produksi"));
                        xs.add(rs.getString("tanggal_panen"));
                    } else if (jenisAnalisis.getSelectedItem().toString() == "Penjualan") {
                        ys.add(rs.getDouble("kuantitas_penjualan"));
                        xs.add(rs.getString("tanggal_transaksi"));
                    } else if (jenisAnalisis.getSelectedItem().toString() == "Konsumsi") {
                        ys.add(rs.getDouble("kuantitas_dikonsumsi"));
                        xs.add(rs.getString("tanggal_konsumsi"));
                    } else if (jenisAnalisis.getSelectedItem().toString() == "Pengiriman") {
                        ys.add(rs.getDouble("kuantitas_pengiriman"));
                        xs.add(rs.getString("tanggal_pengiriman"));
                    }

                }

                //Draw Graph
                if (xs.size() >= 10) {
                    GraphPanel mainPanel = new GraphPanel(ys, xs, "line");
                    mainPanel.setPreferredSize(new Dimension(1000, 600));
                    JFrame frame = new JFrame(judul);
                    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    frame.getContentPane().add(mainPanel);
                    frame.pack();
                    frame.setLocationRelativeTo(null);
                    frame.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Total data kurang dari 10. Tidak dapat memulai analisis.");
                }
            }
        }
        catch (SQLException e) {
            e.printStackTrace();
        }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jenisAnalisis2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jenisAnalisis2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jenisAnalisis2ActionPerformed

    private void boxSayuran2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxSayuran2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxSayuran2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (boxSayuran2.getSelectedItem().toString() == "None") {
            JOptionPane.showMessageDialog(this, "Pilih Sayuran terlebih dahulu");
            return;
        }
        
        String connectionUrl
                = "jdbc:sqlserver://" + SQLTaker.instanceName
                + "database=" + SQLTaker.dbName
                + "user=" + SQLTaker.id
                + "password=" + SQLTaker.pass
                + "encrypt=false;"
                + "trustServerCertificate=false;"
                + "loginTimeout=10;";


        ResultSet rs = null;

        try (Connection connection = DriverManager.getConnection(connectionUrl);
                Statement statement = connection.createStatement();) {
            if (jTabbedPane1.getTitleAt(jTabbedPane1.getSelectedIndex()).equals("Kuantitas")) {
                
                String judul = "Kuantitas ";
                String selectSql = "";
                if (jenisAnalisis2.getSelectedItem().toString() == "Panen") {
                    selectSql += "SELECT SUM(kuantitas_produksi) AS \"kuantitas_produksi\", kelurahan FROM menghasilkan " +
                        "JOIN pemasok ON menghasilkan.id_pemasok = pemasok.id_pemasok WHERE ";

                    judul += "Panen";
                } else if (jenisAnalisis2.getSelectedItem().toString() == "Penjualan") {
                    selectSql += "SELECT SUM(kuantitas_penjualan) AS \"kuantitas_penjualan\", kelurahan FROM menjual " +
                        "JOIN distributor ON menjual.id_distributor = distributor.id_distributor WHERE ";

                    judul += "Penjualan";
                } else if (jenisAnalisis2.getSelectedItem().toString() == "Konsumsi") {
                    selectSql += "SELECT SUM(kuantitas_dikonsumsi) AS \"kuantitas_dikonsumsi\", nama_kelurahan FROM mengkonsumsi " +
                        "JOIN warga_kelurahan ON mengkonsumsi.kode_wilayah = warga_kelurahan.kode_wilayah WHERE ";

                    judul += "Konsumsi";
                } else if (jenisAnalisis2.getSelectedItem().toString() == "Pengiriman") {
                    selectSql += "SELECT SUM(kuantitas_pengiriman) AS \"kuantitas_pengiriman\", kelurahan FROM mengirim " +
                        "JOIN distributor ON mengirim.id_distributor = distributor.id_distributor WHERE ";

                    judul += "Pengiriman";
                }
                
                if (jenisAnalisis2.getSelectedItem().toString() != "Pengiriman")
                    selectSql += "nama_sayur = '"+ boxSayuran2.getSelectedItem().toString() + "' ";
                else
                    selectSql += "nama_barang = '"+ boxSayuran2.getSelectedItem().toString() + "' ";
                judul += " " + boxSayuran2.getSelectedItem().toString();
                
                
                if (jenisAnalisis2.getSelectedItem().toString() != "Konsumsi")
                    selectSql += "GROUP BY kelurahan;";
                else
                    selectSql += "GROUP BY nama_kelurahan;";
                
                
                rs = statement.executeQuery(selectSql);
    //             Print results from select statement
                ArrayList<Double> ys = new ArrayList<>();
                ArrayList<String> xs = new ArrayList<>();
                while(rs.next()){
                    if (jenisAnalisis2.getSelectedItem().toString() == "Panen") {
                        ys.add(rs.getDouble("kuantitas_produksi"));
                        xs.add(rs.getString("kelurahan"));
                        System.out.println(rs.getString("kelurahan"));
                    } else if (jenisAnalisis2.getSelectedItem().toString() == "Penjualan") {
                        ys.add(rs.getDouble("kuantitas_penjualan"));
                        xs.add(rs.getString("kelurahan"));
                        System.out.println(rs.getString("kelurahan"));
                    } else if (jenisAnalisis2.getSelectedItem().toString() == "Konsumsi") {
                        ys.add(rs.getDouble("kuantitas_dikonsumsi"));
                        xs.add(rs.getString("nama_kelurahan"));
                        System.out.println(rs.getString("nama_kelurahan"));
                    } else if (jenisAnalisis2.getSelectedItem().toString() == "Pengiriman") {
                        ys.add(rs.getDouble("kuantitas_pengiriman"));
                        xs.add(rs.getString("kelurahan"));
                        System.out.println(rs.getString("kelurahan"));
                    }

                }

                //Draw Graph
                if (xs.size() < 10) {
                    int n = 10-xs.size();
                    for (int i = 0; i < n; i++) {
                        xs.add("  ");
                        ys.add(0.0);
                    }
                    System.out.println(xs.size());
                }
                
                GraphPanel mainPanel = new GraphPanel(ys, xs, "batang");
                mainPanel.setPreferredSize(new Dimension(1000, 600));
                JFrame frame = new JFrame(judul);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.getContentPane().add(mainPanel);
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        }
        catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void boxSayuran3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxSayuran3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxSayuran3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (boxSayuran3.getSelectedItem().toString() == "None") {
            JOptionPane.showMessageDialog(this, "Pilih Sayuran terlebih dahulu");
            return;
        }
        
        String connectionUrl
                = "jdbc:sqlserver://" + SQLTaker.instanceName
                + "database=" + SQLTaker.dbName
                + "user=" + SQLTaker.id
                + "password=" + SQLTaker.pass
                + "encrypt=false;"
                + "trustServerCertificate=false;"
                + "loginTimeout=10;";


        ResultSet rs = null;
        ResultSet rs2 = null;

        try (Connection connection = DriverManager.getConnection(connectionUrl);
                Statement statement = connection.createStatement();) {
            if (jTabbedPane1.getTitleAt(jTabbedPane1.getSelectedIndex()).equals("Kualitas")) {
                
                String selectSql = "";
                
                //Unite Tanggal
                String tanggal0 = y4.getSelectedItem().toString() + "-" + m4.getSelectedItem().toString() + "-" + d4.getSelectedItem().toString();
                String tanggal1 = y5.getSelectedItem().toString() + "-" + m5.getSelectedItem().toString() + "-" + d5.getSelectedItem().toString();
                
                selectSql = "SELECT COUNT(*) AS \"hasil\" FROM mengkonsumsi" +
                        " WHERE nama_sayur = '"+ boxSayuran3.getSelectedItem().toString() + 
                        "' AND kondisi_sayur = 'Segar'" +
                        " AND tanggal_konsumsi BETWEEN '"+ tanggal0 +"' AND '"+ tanggal1 +"';";
                rs = statement.executeQuery(selectSql);
                double sayurSegar = 0;
                while(rs.next()){
                     sayurSegar = rs.getDouble("hasil");
                }
                System.out.println(sayurSegar);
                
                String selectSql2 = "SELECT COUNT(*) AS \"hasil\" FROM mengkonsumsi" + 
                        " WHERE nama_sayur = '"+ boxSayuran3.getSelectedItem().toString() + "';";
                rs2 = statement.executeQuery(selectSql2);
                double totalSayur = 0;
                while(rs2.next()){
                     totalSayur = rs2.getDouble("hasil");
                }
                System.out.println(totalSayur);
                double persentase = 0;
                if (totalSayur != 0)
                    persentase = sayurSegar * 100 / totalSayur;

                result.setText(Double.toString(persentase)+"%");
                analisisButton.setEnabled(true);
                this.lastKualitas = boxSayuran3.getSelectedItem().toString();
                this.t0 = tanggal0;
                this.t1 = tanggal1;
            }
        }
        catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void m4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m4ActionPerformed
        String[] temp = {"1", "3", "5", "7", "8", "10", "12"};
        if (m4.getSelectedItem().toString() == "2") {
            if (Integer.parseInt(y4.getSelectedItem().toString())%4 == 0) {
                d4.removeAllItems();
                for (int i = 0; i < 29; i++) {
                    d4.addItem(Integer.toString(i+1));
                }
            } else {
                d4.removeAllItems();
                for (int i = 0; i < 28; i++) {
                    d4.addItem(Integer.toString(i+1));
                }
            }
        } else if (Arrays.asList(temp).contains(m4.getSelectedItem().toString())) {
            d4.removeAllItems();
            for (int i = 0; i < 31; i++) {
                d4.addItem(Integer.toString(i+1));
            }
        } else {
            d4.removeAllItems();
            for (int i = 0; i < 30; i++) {
                d4.addItem(Integer.toString(i+1));
            }
        }
    }//GEN-LAST:event_m4ActionPerformed

    private void y4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y4ActionPerformed
        String[] temp = {"1", "3", "5", "7", "8", "10", "12"};
        if (m4.getSelectedItem().toString() == "2") {
            if (Integer.parseInt(y4.getSelectedItem().toString())%4 == 0) {
                d4.removeAllItems();
                for (int i = 0; i < 29; i++) {
                    d4.addItem(Integer.toString(i+1));
                }
            } else {
                d4.removeAllItems();
                for (int i = 0; i < 28; i++) {
                    d4.addItem(Integer.toString(i+1));
                }
            }
        } else if (Arrays.asList(temp).contains(m4.getSelectedItem().toString())) {
            d4.removeAllItems();
            for (int i = 0; i < 31; i++) {
                d4.addItem(Integer.toString(i+1));
            }
        } else {
            d4.removeAllItems();
            for (int i = 0; i < 30; i++) {
                d4.addItem(Integer.toString(i+1));
            }
        }
    }//GEN-LAST:event_y4ActionPerformed

    private void m5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m5ActionPerformed
        String[] temp = {"1", "3", "5", "7", "8", "10", "12"};
        if (m5.getSelectedItem().toString() == "2") {
            if (Integer.parseInt(y5.getSelectedItem().toString())%4 == 0) {
                d5.removeAllItems();
                for (int i = 0; i < 29; i++) {
                    d5.addItem(Integer.toString(i+1));
                }
            } else {
                d5.removeAllItems();
                for (int i = 0; i < 28; i++) {
                    d5.addItem(Integer.toString(i+1));
                }
            }
        } else if (Arrays.asList(temp).contains(m5.getSelectedItem().toString())) {
            d5.removeAllItems();
            for (int i = 0; i < 31; i++) {
                d5.addItem(Integer.toString(i+1));
            }
        } else {
            d5.removeAllItems();
            for (int i = 0; i < 30; i++) {
                d5.addItem(Integer.toString(i+1));
            }
        }
    }//GEN-LAST:event_m5ActionPerformed

    private void y5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y5ActionPerformed
        String[] temp = {"1", "3", "5", "7", "8", "10", "12"};
        if (m5.getSelectedItem().toString() == "2") {
            if (Integer.parseInt(y5.getSelectedItem().toString())%4 == 0) {
                d5.removeAllItems();
                for (int i = 0; i < 29; i++) {
                    d5.addItem(Integer.toString(i+1));
                }
            } else {
                d5.removeAllItems();
                for (int i = 0; i < 28; i++) {
                    d5.addItem(Integer.toString(i+1));
                }
            }
        } else if (Arrays.asList(temp).contains(m5.getSelectedItem().toString())) {
            d5.removeAllItems();
            for (int i = 0; i < 31; i++) {
                d5.addItem(Integer.toString(i+1));
            }
        } else {
            d5.removeAllItems();
            for (int i = 0; i < 30; i++) {
                d5.addItem(Integer.toString(i+1));
            }
        }
    }//GEN-LAST:event_y5ActionPerformed

    private void d4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d4ActionPerformed

    private void analisisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analisisButtonActionPerformed
        String connectionUrl
                = "jdbc:sqlserver://" + SQLTaker.instanceName
                + "database=" + SQLTaker.dbName
                + "user=" + SQLTaker.id
                + "password=" + SQLTaker.pass
                + "encrypt=false;"
                + "trustServerCertificate=false;"
                + "loginTimeout=10;";


        ResultSet rs = null;
        ResultSet rs2 = null;
        ResultSet rs3 = null;
        ResultSet rs4 = null;
        

        try (Connection connection = DriverManager.getConnection(connectionUrl);
                Statement statement = connection.createStatement();) {
            if (jTabbedPane1.getTitleAt(jTabbedPane1.getSelectedIndex()).equals("Kualitas")) {
                
                String selectSql = "";
                
                //Unite Tanggal
                String tanggal0 = y4.getSelectedItem().toString() + "-" + m4.getSelectedItem().toString() + "-" + d4.getSelectedItem().toString();
                String tanggal1 = y5.getSelectedItem().toString() + "-" + m5.getSelectedItem().toString() + "-" + d5.getSelectedItem().toString();
                
                selectSql = "SELECT SUM(kuantitas_dikonsumsi) AS \"hasil\" , nama_sayur FROM mengkonsumsi" +
                        " WHERE nama_sayur = '"+ lastKualitas + 
                        "' AND tanggal_konsumsi BETWEEN '"+ t0 +"' AND '"+ t1 +
                        "' GROUP BY nama_sayur"+";";
                rs = statement.executeQuery(selectSql);
                double banyakKonsumsi = 0;
                while(rs.next()){
                    banyakKonsumsi = rs.getDouble("hasil");
                }
                System.out.println(banyakKonsumsi);
                
                String selectSql2 = "SELECT SUM(kuantitas_produksi) AS \"hasil\" FROM menghasilkan" + 
                        " WHERE nama_sayur = '"+ lastKualitas + 
                        "' AND tanggal_panen BETWEEN '"+ t0 +"' AND '"+ t1 +
                        "' GROUP BY nama_sayur"+";";
                rs2 = statement.executeQuery(selectSql2);
                double banyakProduksi = 0;
                while(rs2.next()){
                     banyakProduksi = rs2.getDouble("hasil");
                }
                System.out.println(banyakProduksi);
                
                String selectSql3 = "SELECT SUM(kuantitas_pengiriman) AS \"hasil\" FROM mengirim" + 
                        " WHERE nama_barang = '"+ lastKualitas + 
                        "' AND tanggal_pengiriman BETWEEN '"+ t0 +"' AND '"+ t1 +
                        "' GROUP BY nama_barang"+";";
                rs3 = statement.executeQuery(selectSql3);
                double banyakPengiriman = 0;
                while(rs3.next()){
                    banyakPengiriman = rs3.getDouble("hasil");
                }
                System.out.println(banyakPengiriman);
                
                String selectSql4 = "SELECT SUM(kuantitas_penjualan) AS \"hasil\" FROM menjual" + 
                        " WHERE nama_sayur = '"+ lastKualitas + 
                        "' AND tanggal_transaksi BETWEEN '"+ t0 +"' AND '"+ t1 +
                        "' GROUP BY nama_sayur"+";";
                rs4 = statement.executeQuery(selectSql4);
                double banyakPenjualan = 0;
                while(rs4.next()){
                    banyakPenjualan = rs4.getDouble("hasil");
                }
                System.out.println(banyakPenjualan);
                
                String hasilAnalisis = "Hasil Analisis:\n";
                if (banyakProduksi>banyakKonsumsi+20) {
                    hasilAnalisis += "Panen melebihi konsumsi ("+banyakProduksi+"kg/"+banyakKonsumsi+"kg)\n";
                }
                if (banyakProduksi>banyakPengiriman) {
                    hasilAnalisis += "Panen melebihi distribusi ("+banyakProduksi+"kg/"+banyakPengiriman+"kg)\n";
                }
                if (banyakPenjualan>banyakKonsumsi) {
                    hasilAnalisis += "Penjualan melebihi konsumsi ("+banyakPenjualan+"kg/"+banyakKonsumsi+"kg)\n";
                }
                
                JOptionPane.showMessageDialog(this, hasilAnalisis);
            }
        }
        catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_analisisButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TrendAnalysis;
    private javax.swing.JPanel TrendAnalysis2;
    private javax.swing.JPanel TrendAnalysis3;
    private javax.swing.JButton analisisButton;
    private javax.swing.JComboBox<String> boxKelurahan;
    private javax.swing.JComboBox<String> boxSayuran;
    private javax.swing.JComboBox<String> boxSayuran2;
    private javax.swing.JComboBox<String> boxSayuran3;
    private javax.swing.JComboBox<String> d0;
    private javax.swing.JComboBox<String> d1;
    private javax.swing.JComboBox<String> d4;
    private javax.swing.JComboBox<String> d5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jenisAnalisis;
    private javax.swing.JComboBox<String> jenisAnalisis2;
    private javax.swing.JComboBox<String> m0;
    private javax.swing.JComboBox<String> m1;
    private javax.swing.JComboBox<String> m4;
    private javax.swing.JComboBox<String> m5;
    private javax.swing.JLabel result;
    private javax.swing.JLabel result2;
    private javax.swing.JComboBox<String> y0;
    private javax.swing.JComboBox<String> y1;
    private javax.swing.JComboBox<String> y4;
    private javax.swing.JComboBox<String> y5;
    // End of variables declaration//GEN-END:variables
}
